{"version":3,"file":"main.2d413b92fd4d3018725e.bundle.js","sources":["webpack:///./src/Utils/localeUtilities.js"],"sourcesContent":["// We can't use constants in this file as it is invoked fron\n// a call within the constants file.\n\nimport br from '../i18n/localizations/pt-BR';\nimport en from '../i18n/localizations/en-US';\nimport { getQueryParameter } from './uriUtilities';\n// import { Locales, Env, Environments } from '../constants';\n\nexport function getLanguageData() {\n  const uri = window.location.host;\n\n  // this was breaking shit\n  if (process.env.REACT_APP_ENV === 'ff') {\n    // Check to see if there are locale query parameters\n    const locale = getQueryParameter('locale');\n\n    if (locale) {\n      if (locale === 'en-US') {\n        return en;\n      }\n\n      if (locale === 'pt-BR') {\n        return br;\n      }\n    } else {\n      if (uri.indexOf('.br') !== -1) {\n        return br;\n      }\n\n      return en;\n    }\n  } else {\n    if (uri.indexOf('.br') !== -1) {\n      return br;\n    }\n\n    return en;\n  }\n\n  return br;\n}\n\nexport function getLocationCode() {\n  const uri = window.location.host;\n\n  if (process.env.REACT_APP_ENV === 'fff') {\n    // Check to see if there are locale query parameters\n    const locale = getQueryParameter('locale');\n\n    if (locale) {\n      if (locale === 'en-US') {\n        return 'en-US';\n      }\n\n      if (locale === 'pt-BR') {\n        return 'pt-BR';\n      }\n    } else {\n      if (uri.indexOf('.br') !== -1) {\n        return 'pt-BR';\n      }\n\n      return 'en-US';\n    }\n  } else {\n    if (uri.indexOf('.br') !== -1) {\n      return 'pt-BR';\n    }\n\n    return 'en-US';\n  }\n\n  return 'pt-BR';\n}\n"],"mappings":"AAQA","sourceRoot":""}